Lab: 表單與資料驗證



1.  建立專案

    C9 功能表 Window | New Terminal
    輸入下列指令以建立 templateForm 專案:

ng new FormProject



2.  以 Template Driven Forms 的作法製作表單:



2.1 編輯 src/app/app.component.html，內容如下:

<h1>
  Angular2 Form
</h1>
<form>
  <div>
    <label for="account">帳號：</label>
    <input type="text" name="account" required minlength="5">
  </div>
  <br>
  <div>
    <label for="password">密碼：</label>
    <input type="password" name="password" required>
  </div>
  <br>
  <button type="submit ">登入</button>
</form>



2.2 在終端機視窗輸入下列指令以啟動網站伺服器:
cd FormProject
ng serve --host 0.0.0.0 --port 8080 --live-reload-port 8081

<Note>「終端機視窗」請勿關閉。



2.3 啟動瀏覽器，
    連到 https://workspace名稱-你的帳號.c9users.io，例如:
    https://njs-wchien.c9users.io

    <Note> 如果一切順利，畫面會出現登入表單。



2.4 再次編輯 src/app/app.component.html，新內容如下:

<h1>
  Angular2 Form
</h1>
<form #loginForm="ngForm">
  <div>
    <label for="account">帳號：</label>
    <input type="text" name="account" required minlength="5" ngModel #account="ngModel">
  </div>
  <div *ngIf="account.errors">
    <span *ngIf="account.errors.required">請輸入帳號！</span>
    <span *ngIf="account.errors.minlength">帳號最少輸入5個字！</span>
  </div>
  <br>
  <div>
    <label for="password">密碼：</label>
    <input type="password" name="password" required ngModel #password="ngModel">
  </div>
  <div *ngIf=" password.errors ">
    <span *ngIf="password.errors.required">請輸入密碼！</span>
  </div>
  <br>
  <button type="submit ">登入</button>
  <div>
    <pre>{{ loginForm.value | json }}</pre>
  </div>
</form>



2.5 重新以瀏覽器檢視並試用表單。


2.6 編輯 src/app/app.component.css，內容如下:

input.ng-touched.ng-invalid {
  border: 5px solid red;
}

input.ng-touched.ng-valid {
  border: 5px solid green;
}


2.7 重新以瀏覽器檢視並試用表單。



3.  以 Model Driven Form 的作法製作表單:



3.1 修改 src/app/app.module.ts，內容如下:

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpModule } from '@angular/http';
import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    ReactiveFormsModule,
    HttpModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }



3.2 修改 src/app/app.component.ts，內容如下:

import { Component } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  form;

  // 預設Email驗證規則  
  pattern = '^[a-z_0-9.-]{1,64}@([a-z0-9-]{1,200}.){1,5}[a-z]{1,6}$';
  originEmailPattern = Validators.pattern(this.pattern);

  // 點擊訂閱改變Email驗證規則  
  checkSubscription() {
    if (this.form.controls.subscription.value) {
      this.form.controls.email.setValidators(
        [this.originEmailPattern, Validators.required]
      );
    }
    else {
      this.form.controls.email.setValidators(
        [this.originEmailPattern]
      );
    }
    this.form.controls.email.updateValueAndValidity();
  }

  // Form 表單 Model  
  constructor(private fb: FormBuilder) {
    this.form = this.fb.group({
      account: ['', [Validators.required, Validators.minLength(5)]],
      password: ['', [Validators.required]],
      personal: this.fb.group({
        name: ['', [Validators.required]],
        gender: '',
        birthday: ''
      }),
      subscription: false,
      email: ['', [this.originEmailPattern]]
    });
  }

  //前略  
  reset() {
    this.form.reset();
    this.checkSubscription();
  }


}



3.3 修改 src/app/app.component.html，內容如下:

<h1> Angular2 Model Driven Form </h1>
<form [formGroup]="form">
  <div>
    <label for="account">帳號：</label>
    <input type="text" name="account" formControlName="account">
    <div class="errors" *ngIf="form.controls.account.errors">
      <span *ngIf="form.controls.account.errors.required">請輸入帳號!</span>
      <span *ngIf="form.controls.account.errors.minlength">帳號最少輸入5個 字!</span>
    </div>
  </div>
  <br>
  <div>
    <label for="password">密碼：</label>
    <input type="password" name="password" formControlName="password">
    <div class="errors" *ngIf="form.controls.password.errors">
      <span *ngIf="form.controls.password.errors.required">請輸入密碼!</span>
    </div>
  </div>
  <br>
  <div formGroupName="personal">
    <div>
      <label for="name">名字：</label>
      <input type="text" formControlName="name">
      <div class="errors" *ngIf="form.controls.personal.controls.name.errors">
        <span *ngIf="form.controls.personal.controls.name.errors. required">請輸入名字!</span>
      </div>
    </div>
    <br>
    <div>
      <label for="gender">性別：</label>
      <input type="radio" formControlName="gender" value="1"> 男
      <input type="radio" formControlName="gender" value="2"> 女
      <input type="radio" formControlName="gender" value="0"> 其他
    </div>
    <br>
    <div>
      <label for="birthday">生日：</label>
      <input type="date" formControlName="birthday">
    </div>
  </div>
  <br>
  <div>
    <label for="subscription">希望收到訂閱資訊：</label>
    <input type="checkbox" formControlName="subscription" (change)="checkSubscription()">
  </div>
  <br>
  <div>
    <label for="email">訂閱信箱：</label>
    <input type="text" formControlName="email">
    <div class="errors" *ngIf="form.controls.email.errors">
      <span *ngIf="form.controls.email.errors.required">訂閱請輸入信箱!</span>
      <span *ngIf="form.controls.email.errors.pattern">信箱格式不正確!</span>
    </div>
  </div>
  <br>
  <button type="submit">送出</button>
  <button type="button" (click)="reset()">重置表單</button>

</form>



3.4 重新以瀏覽器檢視並試用表單。

